% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/signvector.R
\name{svzero_fingerprint}
\alias{svzero_fingerprint}
\title{Distinguish different types of interval equalities}
\usage{
svzero_fingerprint(set, ineqmat = NULL, edo = 12, rounder = 10)
}
\arguments{
\item{set}{Numeric vector of pitch-classes in the set}

\item{ineqmat}{Defaults to \code{NULL}, in which case the function assumes
you want to use the standard hyperplane arrangement of MCT. But you can
enter a different matrix that contains normal vectors for any hyperplane
arrangement in the same format as the standard ineqmats.}

\item{edo}{Number of unit steps in an octave. Defaults to \code{12}.}

\item{rounder}{Numeric (expected integer) representing tolerance:
number of decimal places to round to.}
}
\value{
Numeric vector with 3 entries: the number of 'normal' hyperplanes
the set lies on, the number of 'exceptional' hyperplanes, and the
number of hyperplanes which compare a formal tritone to itself.
}
\description{
Not all hyperplanes are made equal. Those which represent "formal tritone"
comparisons and those which are "exceptional" because they check a
scale degree twice ("Modal Color Theory," 40-41) play a different role
in the structure of the hyperplane arrangement than the rest. This function
returns a "fingerprint" of a scale which is like \code{\link[=countsvzeroes]{countsvzeroes()}} but
which counts the different types of hyperplane separately.
}
\examples{
# Two hexachords on the same number of hyperplanes but with different fingerprints
hex1 <- c(0,1,3,5,8,9)
hex2 <- c(0,1,3,5,6,9)
countsvzeroes(hex1) == countsvzeroes(hex2)
svzero_fingerprint(hex1)
svzero_fingerprint(hex2)
# Compare brightnessgraph(hex1) and brightnessgraph(hex2)

}
